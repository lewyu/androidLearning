答辩：
1.统一使用自己电脑进行答辩，一定要提前上讲台连接投影仪进行调试。
2.不要盲目追求功能的拓展和UI的美化，应该先求兼容性和稳定性。
3.每组讲解的时间不得超过10min，后面进行提问环节
4.周三晚上上交：项目代码、apk（Android Studio必须签名）、PPT
5.小组内部自行分工
6.PPT分为以下内容：产品介绍、代码讲解、项目演示（模拟器、录屏等）、感谢致辞等

MVP设计不光应用于ListView，还可以应用于GridView等。

广播 Broadcast
全局大喇叭，在手机内部的各个app都可以接收广播。
每个App都是单独的进程，广播可以做到跨App通信。

广播的发送都是千篇一律的，主要的差别在于接收。
广播是通过action来判定发送和接收的，action相当于电台中的频段的概念。
1.静态注册的广播接收器
要在清单文件中进行注册，包含receiver节点和要接受的广播的action，静态注册的接收器一旦注册（开机等待片刻即注册完毕），始终可以接收广播。

2.动态注册的广播接收器
灵活，使用的时候在java代码中进行注册，使用完了在java代码中注销。
单独将广播接收器的话，动态注册和静态注册在使用上没有任何差别。差别在注册和注销上。
注册后立刻可以接收，如果不注销，一直可以接收。一旦注销，不可接收。

回调机制原理：
以前去约定执行的代码，约定好后，去执行其他的代码，当达到约定的条件时，间接调用约定的代码。
将接口对象传入类内部，在特定的世界，通过传入的接口对象来间接调用已经实现的接口中的抽象方法。


线程 Thread
默认的情况下，无论是Java还是Android，都是在主线程一个线程（主线程，UI线程）中执行的。
如果在主线程中进行耗时操作（容易引发阻塞的操作，比如网络、流等）会触发ANR机制。
耗时操作必须在子线程中进行，UI操作必须在主线程（UI线程）中进行。

线程启动的方式
方式一：继承Thread类
方式二：实现Runnable接口

Handler
AsyncTask、runOnUIThread等原生的异步刷新的工具类，都是基于Handler来实现的。
Tips：如果程序比较庞大，频繁的使用Handler，建议Handler为弱引用

Application传递数据
万物皆对象：
只要是拥有Activity对象（Context）的地方就能使用
一个App只有一个Application对象，程序进程在Application对象就在。




